// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211122234524_AddWorkoutTableV2")]
    partial class AddWorkoutTableV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("API.Entities.Exercises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Muscle")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("API.Entities.History", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("History");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExercisesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExercisesId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("API.Entities.Workouts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Historyid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserIdId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Historyid");

                    b.HasIndex("UserIdId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Historyid")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Historyid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.HasOne("API.Entities.Exercises", "Exercises")
                        .WithMany("Photo")
                        .HasForeignKey("ExercisesId");

                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("API.Entities.Workouts", b =>
                {
                    b.HasOne("API.Entities.History", null)
                        .WithMany("Workouts")
                        .HasForeignKey("Historyid");

                    b.HasOne("AppUser", "UserId")
                        .WithMany("Workouts")
                        .HasForeignKey("UserIdId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.HasOne("API.Entities.History", "History")
                        .WithMany()
                        .HasForeignKey("Historyid");

                    b.Navigation("History");
                });

            modelBuilder.Entity("API.Entities.Exercises", b =>
                {
                    b.Navigation("Photo");
                });

            modelBuilder.Entity("API.Entities.History", b =>
                {
                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("AppUser", b =>
                {
                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
